name: CD - Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["CI - Test & Build Docker"] 
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config

      - name: Deploy to Kubernetes and generate deployment.yaml dynamically
        run: |
          cat <<EOF > deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: backstm-deployment
            labels:
              app: backstm
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: backstm
            template:
              metadata:
                labels:
                  app: backstm
              spec:
                containers:
                  - name: backstm-container
                    image: piitan123/backstm:latest
                    ports:
                      - containerPort: 3000
                    envFrom:
                      - configMapRef:
                          name: backstm-config
                      - secretRef:
                          name: backstm-secret
          EOF

          kubectl apply -f deployment.yaml
      - name: Deploy Service
        run: |
          cat <<EOF > service.yaml
          apiVersion: v1
          kind: Service
          metadata:
            name: streamcast-service
          spec:
            type: NodePort
            selector:
              app: backstm
            ports:
              - protocol: TCP
                port: 3000
                targetPort: 3000
                nodePort: 30000
          EOF

          kubectl apply -f service.yaml

