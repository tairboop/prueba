name: CD - Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download version artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ci.yml
          name: version
          path: .

      - name: Read version from file txt
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Deploy to Kubernetes inside VPS via SSH
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: VERSION
          script: |
            set -e

            cat <<EOF > /root/deployment.yaml
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: backstm-deployment
              labels:
                app: backstm
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: backstm
              template:
                metadata:
                  labels:
                    app: backstm
                spec:
                  containers:
                    - name: backstm-container
                      image: piitan123/backstm:${VERSION}
                      imagePullPolicy: Always
                      ports:
                        - containerPort: 3000
                      envFrom:
                        - configMapRef:
                            name: backstm-config
                        - secretRef:
                            name: backstm-secret
            EOF

                        kubectl --kubeconfig /etc/rancher/k3s/k3s.yaml apply -f /root/deployment.yaml
                        kubectl --kubeconfig /etc/rancher/k3s/k3s.yaml rollout status deployment/backstm-deployment --timeout=100s || {
                          echo "Rollback..."
                          kubectl --kubeconfig /etc/rancher/k3s/k3s.yaml rollout undo deployment/backstm-deployment
                          exit 1
                        }

            cat <<EOF > service.yaml
            apiVersion: v1
            kind: Service
            metadata:
              name: streamcast-service
            spec:
              type: NodePort
              selector:
                app: backstm
              ports:
                - protocol: TCP
                  port: 3000
                  targetPort: 3000
                  nodePort: 30000
            EOF

            kubectl --kubeconfig /etc/rancher/k3s/k3s.yaml apply -f service.yaml
